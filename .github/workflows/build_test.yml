name: Build and Test 

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Run Tests
      run: |
        python manage.py test
  DependencyCheck:
    runs-on: ubuntu-latest
    needs: test
    name: depecheck_test
    steps:
    - name: Dependency_Check
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      with:
          project: 'core'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
    
  Nmap:
     name: building nmap image and pushing into repository
     needs: DependencyCheck
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2
     - name: Build the Docker image of namp
       run: docker build -t nmapimage .
     - name: uploading12345
       uses: mr-smithers-excellent/docker-build-push@v5
       with:
        image: harshametla/docker_image
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  Sqlmap:
    name:  building sqlmap image and pushing into repository
    needs: Nmap
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image of sqlmap
      run: docker build -f Dockerfile_sqlmap .
    - name: uploading
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: harshametla/new
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}   
  deploy:
    needs: Sqlmap
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: django-github-actions-aws
        environment_name: Djangogithubactionsaws-env
        version_label: 1234845
        region: "ap-south-1"
        deployment_package: deploy.zip
